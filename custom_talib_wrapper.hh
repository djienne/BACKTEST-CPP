#include <iostream>
#include <vector>
#include <string>
#include <fstream>
#include <math.h>
#include <ta-lib/ta_libc.h>

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
struct KLINEf
{
    std::vector<int> d_time;
    std::vector<float> d_open;
    std::vector<float> d_high;
    std::vector<float> d_low;
    std::vector<float> d_close;
    int nb;
};
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

std::vector<float> float_range(const float min, const float max, const float step);

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

std::vector<float> TALIB_MIN(const std::vector<float> vals, const int period);
std::vector<float> TALIB_MAX(const std::vector<float> vals, const int period);

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

std::vector<float> TALIB_RSI(const std::vector<float> vals, const int period);

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

std::vector<float> TALIB_EMA(const std::vector<float> vals, const int period);

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

std::vector<float> TALIB_STOCHRSI_K(std::vector<float> vals, const int period, const int k_period, const int d_period);
std::vector<float> TALIB_STOCHRSI_not_averaged(const std::vector<float> vals, const int nb_period_stoch, const int nb_period_rsi);

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////